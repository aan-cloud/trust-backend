// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  username String @unique
  email String @unique

  password Password?

  carts Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(uuid())

  hash String 

  user User @relation(fields: [userId], references: [id])
  userId String @unique
}

model Product {
  id          String @id @default(uuid())
  name        String @unique
  slug        String @unique
  imageUrl   String
  description String
  price       Int
  stock       Int

  cartItems CartItem[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String? 

  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  slug String @unique

  products Product[]

  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model CartItem {
  id String @id @default(uuid())

  product Product @relation(fields: [productId], references: [id])
  productId String 

  quantity Int @default(1)

  cart Cart @relation(fields: [cartId], references: [id])
  cartId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id String @id @default(uuid())

  user User @relation(fields: [userId], references: [id])
  userId String

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}